/* Generated By:MinosseCC: Do not edit this line. CLIPSParserConstants.cs */
namespace Creshendo.Util.Parser.Clips2{
public class CLIPSParserConstants {

  internal const int EOF = 0;
  internal const int COMMENT_TEXT = 7;
  internal const int END_COMMENT = 8;
  internal const int LBRACE = 9;
  internal const int RBRACE = 10;
  internal const int INTEGER_LITERAL = 11;
  internal const int FLOATING_POINT_LITERAL = 12;
  internal const int EXPONENT = 13;
  internal const int STRING_LITERAL = 14;
  internal const int BIND = 15;
  internal const int BIND2 = 16;
  internal const int BIND3 = 17;
  internal const int BIND4 = 18;
  internal const int BIND5 = 19;
  internal const int BINDING = 20;
  internal const int BOOLEAN = 21;
  internal const int AGGREGATE = 22;
  internal const int ASSERT = 23;
  internal const int ASSERTTEMPORAL = 24;
  internal const int AUTOFOCUS = 25;
  internal const int ALLOWEDVALUES = 26;
  internal const int CHAININGDIRECTION = 27;
  internal const int COMMAND = 28;
  internal const int DECLARE = 29;
  internal const int DEFCLASS = 30;
  internal const int DEFFACT = 31;
  internal const int DEFFUNCTION = 32;
  internal const int DEFGENERIC = 33;
  internal const int DEFGLOBAL = 34;
  internal const int DEFINSTANCE = 35;
  internal const int DEFMETHOD = 36;
  internal const int DEFMODULE = 37;
  internal const int DEFRULE = 38;
  internal const int DEFTEMPLATE = 39;
  internal const int DESCRIBECLASS = 40;
  internal const int DEFAULTVALUE = 41;
  internal const int DOUBLE = 42;
  internal const int EXISTS = 43;
  internal const int EFFECTIVE = 44;
  internal const int EXPIRATION = 45;
  internal const int FACTINDEX = 46;
  internal const int FLOAT = 47;
  internal const int INTEGER = 48;
  internal const int INTERVALTIME = 49;
  internal const int LOGICAL = 50;
  internal const int LONG = 51;
  internal const int MODIFY = 52;
  internal const int MULTISLOT = 53;
  internal const int NOAGENDA = 54;
  internal const int NOLOOP = 55;
  internal const int NUMBER = 56;
  internal const int NOTCE = 57;
  internal const int REMEMBERMATCH = 58;
  internal const int RETRACT = 59;
  internal const int RULEVERSION = 60;
  internal const int RELATIVETIME = 61;
  internal const int SALIENCE = 62;
  internal const int SEND = 63;
  internal const int SHORT = 64;
  internal const int SLOT = 65;
  internal const int STRING = 66;
  internal const int SYMBOL = 67;
  internal const int TEMPORALACTIVATION = 68;
  internal const int TEMPORAL = 69;
  internal const int TEST = 70;
  internal const int TRUE = 71;
  internal const int TRUE2 = 72;
  internal const int TYPEDEF = 73;
  internal const int FALSE = 74;
  internal const int FALSE2 = 75;
  internal const int NIL = 76;
  internal const int ARROW = 77;
  internal const int ASSIGN = 78;
  internal const int SEMICOLON = 79;
  internal const int PLUS = 80;
  internal const int MINUS = 81;
  internal const int MULTIPLY = 82;
  internal const int DIVIDE = 83;
  internal const int GT1 = 84;
  internal const int GT2 = 85;
  internal const int LT1 = 86;
  internal const int LT2 = 87;
  internal const int EQ1 = 88;
  internal const int EQ2 = 89;
  internal const int LE1 = 90;
  internal const int LE2 = 91;
  internal const int GE1 = 92;
  internal const int GE2 = 93;
  internal const int NE1 = 94;
  internal const int NE2 = 95;
  internal const int AND1 = 96;
  internal const int AND2 = 97;
  internal const int OR1 = 98;
  internal const int OR2 = 99;
  internal const int TILDA = 100;
  internal const int IDENTIFIER = 101;
  internal const int LETTER = 102;
  internal const int DIGIT = 103;
  internal const int PATH_LITERAL = 104;

  internal const int DEFAULT = 0;
  internal const int IN_COMMENT = 1;

  internal readonly string[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\";;\"",
    "<token of kind 6>",
    "<COMMENT_TEXT>",
    "<END_COMMENT>",
    "\"(\"",
    "\")\"",
    "<INTEGER_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<BIND>",
    "<BIND2>",
    "<BIND3>",
    "<BIND4>",
    "<BIND5>",
    "\"bind\"",
    "\"BOOLEAN\"",
    "\"aggregate\"",
    "\"assert\"",
    "\"assert-temporal\"",
    "\"auto-focus\"",
    "\"allowed-values\"",
    "\"chaining-direction\"",
    "\"command\"",
    "\"declare\"",
    "\"defclass\"",
    "\"deffact\"",
    "\"deffunction\"",
    "\"defgeneric\"",
    "\"defglobal\"",
    "\"definstance\"",
    "\"defmethod\"",
    "\"defmodule\"",
    "\"defrule\"",
    "\"deftemplate\"",
    "\"describe-class\"",
    "\"default\"",
    "\"DOUBLE\"",
    "\"exists\"",
    "\"effective-date\"",
    "\"expiration-date\"",
    "\"fact-index\"",
    "\"FLOAT\"",
    "\"INTEGER\"",
    "\"interval-time\"",
    "\"logical\"",
    "\"LONG\"",
    "\"modify\"",
    "\"multislot\"",
    "\"no-agenda\"",
    "\"no-loop\"",
    "\"NUMBER\"",
    "\"not\"",
    "\"remember-match\"",
    "\"retract\"",
    "\"rule-version\"",
    "\"relative-time\"",
    "\"salience\"",
    "\"send\"",
    "\"SHORT\"",
    "\"slot\"",
    "\"STRING\"",
    "\"symbol\"",
    "\"temporal-activation\"",
    "\"temporal\"",
    "\"test\"",
    "\"TRUE\"",
    "\"true\"",
    "\"type\"",
    "\"FALSE\"",
    "\"false\"",
    "\"nil\"",
    "\"=>\"",
    "\"<-\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\">\"",
    "\"gt\"",
    "\"<\"",
    "\"lt\"",
    "\"==\"",
    "\"eq\"",
    "\"<=\"",
    "\"le\"",
    "\">=\"",
    "\"ge\"",
    "\"!=\"",
    "\"ne\"",
    "\"and\"",
    "\"&\"",
    "\"or\"",
    "\"|\"",
    "\"~\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<PATH_LITERAL>",
  };

}
}
